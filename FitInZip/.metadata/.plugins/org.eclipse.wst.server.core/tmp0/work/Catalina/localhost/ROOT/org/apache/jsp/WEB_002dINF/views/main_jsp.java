/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2021-03-24 04:50:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("  <meta charset=\"utf-8\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("  <meta name=\"description\" content=\"\">\n");
      out.write("  <meta name=\"author\" content=\"\">\n");
      out.write("\n");
      out.write("  <title>FITIN.ZIP</title>\n");
      out.write("\n");
      out.write("  <!-- Bootstrap core CSS -->\n");
      out.write("  <link href=\"../resources/main/vendor/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("  <!-- Custom fonts for this template -->\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css?family=Catamaran:100,200,300,400,500,600,700,800,900\" rel=\"stylesheet\">\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css?family=Lato:100,100i,300,300i,400,400i,700,700i,900,900i\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("  <!-- Custom styles for this template -->\n");
      out.write("  <link href=\"../resources/main/css/one-page-wonder.min.css\" rel=\"stylesheet\">\n");
      out.write("  \n");
      out.write("  <!-- 한글 폰트 -->\n");
      out.write("  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@500&display=swap\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("\t* {\n");
      out.write("\tfont-family: 'Noto Sans KR', sans-serif;\n");
      out.write("\t}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("  <!-- Navigation -->\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "nav.jsp", out, false);
      out.write("\n");
      out.write("  \n");
      out.write("  <header class=\"masthead text-center text-white\">\n");
      out.write("    <div class=\"masthead-content\">\n");
      out.write("      <div class=\"container\">\n");
      out.write("        <h1 class=\"masthead-heading mb-0\">We bring offline to online</h1>\n");
      out.write("        <h2 class=\"masthead-subheading mb-0\">헬스장 대신, 이젠 집에서 라이브로 PT 받으세요</h2>\n");
      out.write("        <a href=\"#\" class=\"btn btn-primary btn-xl rounded-pill mt-5\">둘러보기</a>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    <!-- <div class=\"bg-circle-1 bg-circle\"></div>\n");
      out.write("    <div class=\"bg-circle-2 bg-circle\"></div>\n");
      out.write("    <div class=\"bg-circle-3 bg-circle\"></div>\n");
      out.write("    <div class=\"bg-circle-4 bg-circle\"></div> -->\n");
      out.write("  </header>\n");
      out.write("\n");
      out.write("  <section>\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <div class=\"row align-items-center\">\n");
      out.write("        <div class=\"col-lg-6 order-lg-2\">\n");
      out.write("          <div class=\"p-5\">\n");
      out.write("            <img class=\"img-fluid rounded-circle\" src=\"../resources/main/img/img_main_cont1.png\" alt=\"\">\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-lg-6 order-lg-1\">\n");
      out.write("          <div class=\"p-5\">\n");
      out.write("            <h4 class=\"display-4\">헬스장 프로그램을 그대로! 집에서 받는 라이브 피트니스</h4>\n");
      out.write("            <p>헬스장에 가고 싶지만 갈 수 없는 많은 이유들..\n");
      out.write("              이제는 헬스장 대신, 집에서 라이브로 PT 받으세요!\n");
      out.write("              집에서도 운동에 몰입할 수 있는 현장감을 경험할 수 있어요.</p>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </section>\n");
      out.write("\n");
      out.write("  <section>\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <div class=\"row align-items-center\">\n");
      out.write("        <div class=\"col-lg-6\">\n");
      out.write("          <div class=\"p-5\">\n");
      out.write("            <img class=\"img-fluid rounded-circle\" src=\"../resources/main/img/img_main_cont2.png\" alt=\"\">\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-lg-6\">\n");
      out.write("          <div class=\"p-5\">\n");
      out.write("            <h4 class=\"display-4\">전문가의 실시간 피드백이 있는 프리미엄 퍼스널 트레이닝</h4>\n");
      out.write("            <p>영상을 보고 혼자서 따라하는 기존 홈트는\n");
      out.write("              제대로 하고 있는건지 알 수 없어 효과가 없거나 다치기 십상이죠.\n");
      out.write("              피트인.zip은 현장에서 하는 PT처럼 전문 강사님에게\n");
      out.write("              실시간으로 정확한 피드백을 받을 수 있어요.</p>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </section>\n");
      out.write("\n");
      out.write("  <section>\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <div class=\"row align-items-center\">\n");
      out.write("        <div class=\"col-lg-6 order-lg-2\">\n");
      out.write("          <div class=\"p-5\">\n");
      out.write("            <img class=\"img-fluid rounded-circle\" src=\"../resources/main/img/img_main_cont3.png\" alt=\"\">\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-lg-6 order-lg-1\">\n");
      out.write("          <div class=\"p-5\">\n");
      out.write("            <h4 class=\"display-4\">의지가 약한 홈트족을 위해 책임감과 경쟁심 자극</h4>\n");
      out.write("            <p>약속된 시간에 수업에 참여해야 한다는 책임감,\n");
      out.write("              수업에 제대로 참여하는 지 누군가 지켜본다는 압박감,\n");
      out.write("              나보다 열심히 수업에 참여하는 다른 분들과의 경쟁심을 통해\n");
      out.write("              운동 의지를 최대로 끌어올릴 수 있어요.</p>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </section>\n");
      out.write("\n");
      out.write("  <!-- Footer -->\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("  <!-- Bootstrap core JavaScript -->\n");
      out.write("  <script src=\"../resources/main/vendor/jquery/jquery.min.js\"></script>\n");
      out.write("  <script src=\"../resources/main/vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\t\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
